---
- name: Install Puppet Server
  ansible.builtin.apt:
    name: puppetserver
    state: present

- name: Create Puppet configuration directory
  ansible.builtin.file:
    path: "{{ puppet.conf_dir }}"
    state: directory
    mode: "0755"

- name: Configure Puppet Server
  ansible.builtin.template:
    src: puppet.conf.j2
    dest: "{{ puppet.conf_dir }}/puppet.conf"
    mode: "0644"

- name: Update Java heap size preserving other settings
  ansible.builtin.lineinfile:
    path: /etc/default/puppetserver
    regexp: '^(JAVA_ARGS=".*)-Xms\w+(\s+)-Xmx\w+(.*")'
    line: "\\1-Xms{{ java_heap_size }}\\2-Xmx{{ java_heap_size }}\\3"
    backrefs: true
    backup: true

- name: Assert that server IP and certname are defined
  ansible.builtin.assert:
    that: server_ip is defined and certname is defined
    msg: "Server IP or certname is not defined"

- name: Add hosts entry for Puppet Server
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ server_ip }} {{ certname }} # Added by Ansible Puppet Server installer"
    regexp: "^{{ server_ip }}\\s+{{ certname }}"

- name: Enable Puppet Server service
  ansible.builtin.systemd:
    name: puppetserver
    enabled: true

- name: Start Puppet Server service
  ansible.builtin.systemd:
    name: puppetserver
    state: started

- name: Show Puppet Server status
  ansible.builtin.debug:
    msg: "Puppet Server installed and running with certificate name: {{ certname }}"

- name: Include PuppetDB installation tasks
  ansible.builtin.import_tasks: puppetdb.yml

- name: Ensure puppet code directory exists
  ansible.builtin.file:
    path: "{{ puppet.environment_dir }}"
    state: directory
    mode: "0755"

- name: Synchronize Puppet environments with rsync
  ansible.posix.synchronize:
    src: environments/
    dest: "{{ puppet.environment_dir }}/environments/"
    delete: true
    recursive: true
  delegate_to: "{{ inventory_hostname }}"
